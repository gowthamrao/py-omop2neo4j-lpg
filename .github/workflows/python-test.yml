name: Run Python Tests

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U testuser -d testdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      neo4j:
        image: neo4j:latest
        env:
          NEO4J_AUTH: neo4j/StrongPass123
          NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
          NEO4J_apoc_import_file_enabled: "true"
          NEO4J_apoc_import_file_use__neo4j__config: "true"
          NEO4JLABS_PLUGINS: '["apoc"]'
        ports:
          - "7475:7474"
          - "7688:7687"
        options: >-
          --health-cmd "wget -O /dev/null --server-response --timeout=2 http://localhost:7474 2>&1 | awk '/^  HTTP/{print $$2}' | grep -q 200"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
          sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Initialize DB
        run: |
          sleep 10
          PGPASSWORD=testpass psql -h localhost -p 5433 -U testuser -d testdb -f tests/sample_data/init.sql

      - name: Run tests
        run: |
          poetry run pytest
        env:
          OMOP_SCHEMA: public
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          NEO4J_URI: bolt://localhost:7688
          NEO4J_USER: neo4j
          NEO4J_PASSWORD: StrongPass123
