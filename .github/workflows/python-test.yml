name: Run Python Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"

    - name: Create .env.test file
      run: |
        echo "NEO4J_URI=bolt://localhost:7688" >> .env.test
        echo "NEO4J_USER=neo4j" >> .env.test
        echo "NEO4J_PASSWORD=StrongPass123" >> .env.test
        echo "POSTGRES_USER=testuser" >> .env.test
        echo "POSTGRES_PASSWORD=testpass" >> .env.test
        echo "POSTGRES_DB=testdb" >> .env.test
        echo "POSTGRES_HOST=localhost" >> .env.test
        echo "POSTGRES_PORT=5433" >> .env.test

    - name: Start services
      run: docker-compose -f docker-compose.test.yml up -d

    - name: Wait for services to be healthy
      run: |
        sleep 10
        echo "Waiting for PostgreSQL..."
        while ! docker-compose -f docker-compose.test.yml exec postgres-test pg_isready -U testuser -d testdb; do
          sleep 5
        done
        echo "PostgreSQL is ready."

        echo "Waiting for Neo4j..."
        while ! curl -s -o /dev/null -w "%{http_code}" http://localhost:7475 | grep -q 200; do
          sleep 5
        done
        echo "Neo4j is ready."

    - name: Run tests
      run: pytest

    - name: Stop services
      if: always()
      run: docker-compose -f docker-compose.test.yml down
